(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(1),
    CreateEvent = _require.CreateEvent;

var _require2 = __webpack_require__(2),
    lazyLoadImage = _require2.lazyLoadImage;

var LAZY_LOAD = 'lazyload';
var LAZY_SRC = 'data-lazy-src';

var lazyEvent = CreateEvent(LAZY_LOAD);

var LazyLoad = function () {
	function LazyLoad(selector) {
		_classCallCheck(this, LazyLoad);

		var images = Array.from(document.querySelectorAll(selector));

		this.images = images.map(function (image) {
			return {
				image: image,
				loaded: false,
				src: image.getAttribute(LAZY_SRC)
			};
		});

		this.images.forEach(function (lazyImage) {
			lazyImage.image.addEventListener(LAZY_LOAD, lazyLoadImage.bind(lazyImage));
		});
	}

	_createClass(LazyLoad, [{
		key: 'fireEvent',
		value: function fireEvent(image) {
			image.dispatchEvent(lazyEvent);
		}
	}]);

	return LazyLoad;
}();

module.exports = { LazyLoad: LazyLoad };

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function CreateEvent(evt) {
	if (document.createEvent) {
		var event = document.createEvent('CustomEvent');
		event.initEvent(evt, true, true);
		return event;
	} else {
		return new Event(evt);
	}
}

module.exports = {
	CreateEvent: CreateEvent
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function loadImage(src) {

	return new Promise(function (resolve) {

		var lazyImage = new Image();
		var result = { loaded: true };

		function onLoad() {
			removeListeners();
			resolve(result);
		}

		function onError() {
			removeListeners();
			result.loaded = false;
			resolve(result);
		}

		function removeListeners() {
			lazyImage.removeEventListener('load', onLoad);
			lazyImage.removeEventListener('error', onError);
		}

		lazyImage.addEventListener('load', onLoad);
		lazyImage.addEventListener('error', onError);

		lazyImage.src = src;
	});
}

function lazyLoadImage() {
	var image = this.image,
	    src = this.src;

	var onImageLoad = getOnImageLoadCallback(image);
	loadImage(src).then(function (result) {
		if (result.loaded) {
			onImageLoad(image, src);
		}
	});
}

function getOnImageLoadCallback(image) {
	switch (true) {
		case image instanceof Image:
			return loadImageElement;
		default:
			return loadBackgroundImage;
	}
}

function loadImageElement(image, src) {
	image.src = src;
}

function loadPictureElement() {}

function loadBackgroundImage() {}

module.exports = {
	lazyLoadImage: lazyLoadImage,
	loadImage: loadImage,
	getOnImageLoadCallback: getOnImageLoadCallback,
	loadImageElement: loadImageElement,
	loadPictureElement: loadPictureElement,
	loadBackgroundImage: loadBackgroundImage
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function debounce(callback, wait, immediate) {
	var timeout = void 0;
	return function bounce() {
		var context = this;
		var args = arguments;
		function later() {
			timeout = null;
			if (!immediate) {
				callback.apply(context, args);
			}
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) {
			callback.apply(context, args);
		}
	};
}

module.exports = {
	debounce: debounce
};

/***/ }),
/* 4 */,
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = __webpack_require__(0),
    LazyLoad = _require.LazyLoad;

var _require2 = __webpack_require__(3),
    debounce = _require2.debounce;

var LAZYTARGET = 'data-lazy-target';
var PROXIMITY_TOLERANCE = 50;

var LazyProximity = function (_LazyLoad) {
  _inherits(LazyProximity, _LazyLoad);

  function LazyProximity(imageSelector, proximitySelector) {
    var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;

    _classCallCheck(this, LazyProximity);

    var _this = _possibleConstructorReturn(this, (LazyProximity.__proto__ || Object.getPrototypeOf(LazyProximity)).call(this, imageSelector));

    PROXIMITY_TOLERANCE = tolerance;
    var proximityTriggers = getProximityTriggers.call(_this, proximitySelector);

    _this.images = _this.images.map(function (lazyImage) {
      var lazyProximityTrigger = void 0,
          onClickCallback = void 0;
      proximityTriggers.forEach(function (proximityTrigger) {
        var isTarget = proximityTrigger.targets.some(function (target) {
          return target === lazyImage.image;
        });
        if (isTarget) {
          lazyProximityTrigger = proximityTrigger.trigger;
          onClickCallback = proximityTrigger.onClickCallback;
        }
      });
      return _extends({
        lazyProximityTrigger: lazyProximityTrigger,
        onClickCallback: onClickCallback
      }, lazyImage);
    });

    _this.onMouseMoveCallback = debounce(onMouseMove.bind(_this), 100);
    document.addEventListener('mousemove', _this.onMouseMoveCallback);

    return _this;
  }

  return LazyProximity;
}(LazyLoad);

function getProximityTriggers(proximitySelector) {
  var _this2 = this;

  return Array.from(document.querySelectorAll(proximitySelector)).map(function (trigger) {
    var targets = Array.from(document.querySelectorAll(trigger.getAttribute(LAZYTARGET)));
    var onClickCallback = onClick.bind(_this2);
    trigger.addEventListener('click', onClickCallback);
    return {
      trigger: trigger,
      targets: targets,
      onClickCallback: onClickCallback
    };
  });
}

function getUnloadedImages(images) {
  return images.filter(function (lazyImage) {
    return !lazyImage.loaded;
  });
}

function onMouseMove(evt) {
  var _this3 = this;

  var unloadedImages = getUnloadedImages(this.images);
  if (unloadedImages.length === 0) {
    document.removeEventListener('mousemove', this.onMouseMoveCallback);
    return;
  }

  var clientX = evt.clientX,
      clientY = evt.clientY;

  var coordinates = getSurroundingCoordinates(clientX, clientY);

  unloadedImages.forEach(function (lazyImage) {
    var lazyProximityTrigger = lazyImage.lazyProximityTrigger,
        onClickCallback = lazyImage.onClickCallback,
        image = lazyImage.image;

    for (var i = 0; i < coordinates.length; i++) {
      var target = coordinates[i];
      var trigger = document.elementFromPoint(target.x, target.y);
      if (lazyProximityTrigger === trigger || lazyProximityTrigger.contains(trigger)) {
        _this3.fireEvent(image);
        lazyImage.loaded = true;
        lazyProximityTrigger.removeEventListener('click', onClickCallback);
        break;
      }
    }
  });
}

function getSurroundingCoordinates(x, y) {
  var current = { x: x, y: y };
  var left = { x: x - PROXIMITY_TOLERANCE, y: y };
  var topLeft = { x: x - PROXIMITY_TOLERANCE, y: y - PROXIMITY_TOLERANCE };
  var top = { x: x, y: y - PROXIMITY_TOLERANCE };
  var topRight = { x: x + PROXIMITY_TOLERANCE, y: y - PROXIMITY_TOLERANCE };
  var right = { x: x + PROXIMITY_TOLERANCE, y: y };
  var bottomRight = { x: x + PROXIMITY_TOLERANCE, y: y + PROXIMITY_TOLERANCE };
  var bottom = { x: x, y: y + PROXIMITY_TOLERANCE };
  var bottomLeft = { x: x - PROXIMITY_TOLERANCE, y: y + PROXIMITY_TOLERANCE };
  return [left, topLeft, top, topRight, right, bottomRight, bottom, bottomLeft, current];
}

function onClick(evt) {
  var _this4 = this;

  var target = evt.target;


  this.images.forEach(function (lazyImage) {
    var lazyProximityTrigger = lazyImage.lazyProximityTrigger,
        image = lazyImage.image,
        onClickCallback = lazyImage.onClickCallback;

    if (lazyProximityTrigger === target) {
      _this4.fireEvent(image);
      lazyImage.loaded = true;
      lazyProximityTrigger.removeEventListener('click', onClickCallback);
    }
  });
}

module.exports = { LazyProximity: LazyProximity };

/***/ })
/******/ ]);
});