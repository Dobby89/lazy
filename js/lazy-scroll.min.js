(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(1),
    CreateEvent = _require.CreateEvent;

var _require2 = __webpack_require__(2),
    lazyLoadImage = _require2.lazyLoadImage;

var LAZY_LOAD = 'lazyload';
var LAZY_SRC = 'data-lazy-src';

var lazyEvent = CreateEvent(LAZY_LOAD);

var LazyLoad = function () {
	function LazyLoad(selector) {
		_classCallCheck(this, LazyLoad);

		var images = Array.from(document.querySelectorAll(selector));

		this.images = images.map(function (image) {
			return {
				image: image,
				loaded: false,
				src: image.getAttribute(LAZY_SRC)
			};
		});

		this.images.forEach(function (lazyImage) {
			lazyImage.image.addEventListener(LAZY_LOAD, lazyLoadImage.bind(lazyImage));
		});
	}

	_createClass(LazyLoad, [{
		key: 'fireEvent',
		value: function fireEvent(image) {
			image.dispatchEvent(lazyEvent);
		}
	}]);

	return LazyLoad;
}();

module.exports = { LazyLoad: LazyLoad };

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function CreateEvent(evt) {
	if (document.createEvent) {
		var event = document.createEvent('CustomEvent');
		event.initEvent(evt, true, true);
		return event;
	} else {
		return new Event(evt);
	}
}

module.exports = {
	CreateEvent: CreateEvent
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function loadImage(src) {

	return new Promise(function (resolve) {

		var lazyImage = new Image();
		var result = { loaded: true };

		function onLoad() {
			removeListeners();
			resolve(result);
		}

		function onError() {
			removeListeners();
			result.loaded = false;
			resolve(result);
		}

		function removeListeners() {
			lazyImage.removeEventListener('load', onLoad);
			lazyImage.removeEventListener('error', onError);
		}

		lazyImage.addEventListener('load', onLoad);
		lazyImage.addEventListener('error', onError);

		lazyImage.src = src;
	});
}

function lazyLoadImage() {
	var image = this.image,
	    src = this.src;

	var onImageLoad = getOnImageLoadCallback(image);
	loadImage(src).then(function (result) {
		if (result.loaded) {
			onImageLoad(image, src);
		}
	});
}

function getOnImageLoadCallback(image) {
	switch (true) {
		case image instanceof Image:
			return loadImageElement;
		default:
			return loadBackgroundImage;
	}
}

function loadImageElement(image, src) {
	image.src = src;
}

function loadPictureElement() {}

function loadBackgroundImage() {}

module.exports = {
	lazyLoadImage: lazyLoadImage,
	loadImage: loadImage,
	getOnImageLoadCallback: getOnImageLoadCallback,
	loadImageElement: loadImageElement,
	loadPictureElement: loadPictureElement,
	loadBackgroundImage: loadBackgroundImage
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function debounce(callback, wait, immediate) {
	var timeout = void 0;
	return function bounce() {
		var context = this;
		var args = arguments;
		function later() {
			timeout = null;
			if (!immediate) {
				callback.apply(context, args);
			}
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) {
			callback.apply(context, args);
		}
	};
}

module.exports = {
	debounce: debounce
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = __webpack_require__(0),
    LazyLoad = _require.LazyLoad;

var _require2 = __webpack_require__(3),
    debounce = _require2.debounce;

var findImagesCallback = void 0,
    resizeCallback = void 0;

var LazyScroll = function (_LazyLoad) {
	_inherits(LazyScroll, _LazyLoad);

	function LazyScroll(selector) {
		_classCallCheck(this, LazyScroll);

		var _this = _possibleConstructorReturn(this, (LazyScroll.__proto__ || Object.getPrototypeOf(LazyScroll)).call(this, selector));

		setLazyImagePositions.call(_this);
		findImagesCallback = debounce(findImagesToLoad.bind(_this), 100);
		resizeCallback = debounce(setLazyImagePositions.bind(_this), 100);

		addEventListeners();

		return _this;
	}

	return LazyScroll;
}(LazyLoad);

function getLazyImagePositions(images) {
	return images.map(function (lazyImage) {
		return _extends({
			imagePosition: getImagePosition(lazyImage.image)
		}, lazyImage);
	});
}

function setLazyImagePositions() {
	this.images = getLazyImagePositions(this.images);
}

function getYPosition(image) {
	var left = 0,
	    top = 0;
	if (image.offsetParent) {
		do {
			left += image.offsetLeft;
			top += image.offsetTop;
		} while (image = image.offsetParent);
		return { left: left, top: top };
	}
}

function findImagesToLoad() {
	var _this2 = this;

	setLazyImagePositions.call(this);
	var imagesToLoad = getImagesInView(this.images);
	imagesToLoad.forEach(function (lazyImage) {
		_this2.fireEvent(lazyImage.image);
		lazyImage.loaded = true;
	});
}

function addEventListeners() {
	window.addEventListener('scroll', findImagesCallback);
	window.addEventListener('DOMContentLoaded', findImagesCallback);
	window.addEventListener('resize', resizeCallback);
}

function removeEventListeners() {
	window.removeEventListener('scroll', findImagesCallback);
	window.removeEventListener('DOMContentLoaded', findImagesCallback);
	window.removeEventListener('resize', resizeCallback);
}

function getImagePosition(image) {
	var _getYPosition = getYPosition(image),
	    top = _getYPosition.top,
	    left = _getYPosition.left;

	var bottom = top + image.offsetHeight;
	var right = left + image.offsetWidth;
	return { left: left, right: right, top: top, bottom: bottom };
}

function getWindowScrollPosition() {
	var _window = window,
	    pageXOffset = _window.pageXOffset,
	    pageYOffset = _window.pageYOffset;

	return { pageXOffset: pageXOffset, pageYOffset: pageYOffset };
}

function getWindowSize() {
	var width = window.innerWidth;
	var height = window.innerHeight;
	return { width: width, height: height };
}

function getWindowBoundaries() {
	var _getWindowScrollPosit = getWindowScrollPosition(),
	    pageXOffset = _getWindowScrollPosit.pageXOffset,
	    pageYOffset = _getWindowScrollPosit.pageYOffset;

	var _getWindowSize = getWindowSize(),
	    width = _getWindowSize.width,
	    height = _getWindowSize.height;

	var xMin = pageXOffset;
	var xMax = pageXOffset + width;
	var yMin = pageYOffset;
	var yMax = pageYOffset + height;
	return { xMin: xMin, xMax: xMax, yMin: yMin, yMax: yMax };
}

function getUnloadedImages(images) {
	return images.filter(function (lazyImage) {
		return !lazyImage.loaded;
	});
}

function getImagesInView(images) {
	var _getWindowBoundaries = getWindowBoundaries(),
	    xMin = _getWindowBoundaries.xMin,
	    xMax = _getWindowBoundaries.xMax,
	    yMin = _getWindowBoundaries.yMin,
	    yMax = _getWindowBoundaries.yMax;

	var unloadedImages = getUnloadedImages(images);
	if (unloadedImages.length === 0) {
		removeEventListeners();
		return [];
	}
	return unloadedImages.filter(function (lazyImage) {
		var _lazyImage$imagePosit = lazyImage.imagePosition,
		    top = _lazyImage$imagePosit.top,
		    left = _lazyImage$imagePosit.left,
		    bottom = _lazyImage$imagePosit.bottom,
		    right = _lazyImage$imagePosit.right;

		return isInViewVertically(top, yMin, bottom, yMax) && isInViewHorizontally(left, xMin, right, xMax);
	});
}

function isInViewVertically(posYmin, windowYmin, posYmax, windowYmax) {
	return posYmin <= windowYmax && posYmax >= windowYmin;
}

function isInViewHorizontally(posXmin, windowXmin, posXmax, windowXmax) {
	return posXmin <= windowXmax && posXmax >= windowXmin;
}

module.exports = {
	LazyScroll: LazyScroll,
	isInViewVertically: isInViewVertically,
	isInViewHorizontally: isInViewHorizontally
};

/***/ })
/******/ ]);
});