(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function CreateEvent(evt) {
	if (document.createEvent) {
		var event = document.createEvent('CustomEvent');
		event.initEvent(evt, true, true);
		return event;
	} else {
		return new Event(evt);
	}
}

module.exports = { CreateEvent: CreateEvent };

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    CreateEvent = _require.CreateEvent;

var _require2 = __webpack_require__(2),
    lazyLoadImage = _require2.lazyLoadImage;

var onLoadEventName = 'lazyload';
var onLoad = CreateEvent(onLoadEventName);
var lazySrcDataAttribute = 'data-lazy-src';

// base lazy load class that provides the functionality to lazy load
// but doesn't actually trigger any lazy load behaviour internally

var LazyLoad = function () {
	function LazyLoad(selector) {
		_classCallCheck(this, LazyLoad);

		var images = Array.from(document.querySelectorAll(selector));

		if (!images.length) {
			console.warn('No elements matching the selector ' + selector + ' were found, LazyImage could not initialise');
			return;
		}

		// lazy load data for each image
		this.images = images.map(function (image) {
			return {
				image: image,
				resolved: false,
				src: getLazySrc(image)
			};
		});

		this.images.forEach(function (lazyImage) {
			lazyImage.image.addEventListener(onLoadEventName, lazyLoadImage.bind(lazyImage));
		});
	}

	_createClass(LazyLoad, [{
		key: 'fireLazyEvent',
		value: function fireLazyEvent(image) {
			image.dispatchEvent(onLoad);
		}
	}]);

	return LazyLoad;
}();

function getLazySrc(image) {

	var src = image.getAttribute(lazySrcDataAttribute);

	if (src) {
		return src;
	}

	// return an array of image sources
	var sources = Array.from(image.children);
	return sources.map(function (source) {
		return source.getAttribute(lazySrcDataAttribute);
	});
}

module.exports = { LazyLoad: LazyLoad };

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(0),
    CreateEvent = _require.CreateEvent;

var onCompleteEventName = 'lazyloadcomplete';
var onErrorEventName = 'lazyloaderror';
var onComplete = CreateEvent(onCompleteEventName);
var onError = CreateEvent(onErrorEventName);

function loadImage(src, image) {

	return new Promise(function (resolve, reject) {

		function onLoad() {
			removeListeners();
			resolve(true);
		}

		function onError() {
			removeListeners();
			reject(false);
		}

		function removeListeners() {
			image.removeEventListener('load', onLoad);
			image.removeEventListener('error', onError);
		}

		image.addEventListener('load', onLoad);
		image.addEventListener('error', onError);

		// if picture element, set srcset on each child
		if (image.parentNode && image.parentNode.constructor === window.HTMLPictureElement || image.parentNode && typeof window.HTMLPictureElement === 'undefined' && image.parentNode.constructor === HTMLUnknownElement) {

			Array.from(image.parentNode.children).forEach(function (child, i) {
				child.setAttribute('srcset', src[i]);
			});
		} else {
			image.setAttribute('src', src);
		}
	});
}

function lazyLoadImage() {
	var image = this.image,
	    src = this.src;


	var lazyImage = new Image();

	// find the img element within the picture element
	if (image.constructor === window.HTMLPictureElement || typeof window.HTMLPictureElement === 'undefined' && image.constructor === HTMLUnknownElement) {
		lazyImage = image.querySelector('img');
	}

	var onImageLoad = getOnLoadCallback(image);

	loadImage(src, lazyImage).then(function () {
		onImageLoad(image, src);
		image.dispatchEvent(onComplete);
	}).catch(function () {
		image.dispatchEvent(onError);
	});
}

function getOnLoadCallback(image) {
	switch (true) {
		case image.constructor === HTMLImageElement:
			return onShowImage;
		case image.constructor !== window.HTMLPictureElement:
			return onShowBackgroundImage;
		default:
			return function () {};
	}
}

function onShowImage(image, src) {
	image.setAttribute('src', src);
}

function onShowBackgroundImage(div, src) {
	div.style.backgroundImage = 'url(' + src + ')';
}

module.exports = {
	lazyLoadImage: lazyLoadImage,
	loadImage: loadImage,
	getOnLoadCallback: getOnLoadCallback,
	onShowImage: onShowImage,
	onShowBackgroundImage: onShowBackgroundImage
};

/***/ })
/******/ ]);
});